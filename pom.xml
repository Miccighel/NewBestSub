<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>it.uniud.newbestsub</groupId>
    <artifactId>NewBestSub</artifactId>
    <version>2.0</version>

    <organization>
        <name>Uniud</name>
        <url>https://www.uniud.it/</url>
    </organization>

    <developers>
        <developer>
            <id>miccighel</id>
            <name>Michael Soprano</name>
            <email>michael.soprano@uniud.it</email>
            <organization>Uniud</organization>
            <organizationUrl>https://www.uniud.it/</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>Europe/Rome</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Kevin Roitero</name>
            <email>roitero.kevin@uniud.it</email>
            <organization>Uniud</organization>
            <organizationUrl>https://www.uniud.it/</organizationUrl>
            <roles>
                <role>Contributor</role>
            </roles>
            <timezone>Europe/Rome</timezone>
        </contributor>
        <contributor>
            <name>Riccardo Lunardi</name>
            <email>riccardo.lunardi@uniud.it</email>
            <organization>Uniud</organization>
            <organizationUrl>https://www.uniud.it/</organizationUrl>
            <roles>
                <role>Contributor</role>
            </roles>
            <timezone>Europe/Rome</timezone>
        </contributor>
        <contributor>
            <name>Stefano Mizzaro</name>
            <email>mizzaro@uniud.it</email>
            <url>http://users.dimi.uniud.it/~stefano.mizzaro/</url>
            <organization>Uniud</organization>
            <organizationUrl>https://www.uniud.it/</organizationUrl>
            <roles>
                <role>Supervisor</role>
            </roles>
            <timezone>Europe/Rome</timezone>
        </contributor>
    </contributors>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JVM toolchain -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>

        <!-- Kotlin -->
        <kotlin.version>2.2.0</kotlin.version>
        <kotlin.stdlib.version>${kotlin.version}</kotlin.stdlib.version>
        <kotlin.test.version>${kotlin.version}</kotlin.test.version>
        <kotlinx.version>0.23.4</kotlinx.version>
        <kotlin.maven.plugin.version>${kotlin.version}</kotlin.maven.plugin.version>
        <kotlin.coroutines.version>1.10.2</kotlin.coroutines.version>

        <!-- Testing -->
        <junit.jupiter.version>5.13.4</junit.jupiter.version>

        <!-- Docs -->
        <dokka.version>2.0.0</dokka.version>

        <!-- Libraries -->
        <apache.commons.version>3.6.1</apache.commons.version> <!-- commons-math3 -->
        <apache.commons.cli>1.10.0</apache.commons.cli>

        <!-- Log4j2 / SLF4J -->
        <log4j.api.version>2.24.3</log4j.api.version>
        <log4j.core.version>2.24.3</log4j.core.version>
        <slf4j.version>1.7.36</slf4j.version>

        <opencsv.version>5.12.0</opencsv.version>
        <jmetal.version>6.0</jmetal.version>

        <!-- Parquet / Hadoop / Snappy -->
        <parquet.version>1.15.2</parquet.version>
        <hadoop.version>3.3.6</hadoop.version>
        <snappy.version>1.1.10.5</snappy.version>

        <!-- Plugins -->
        <maven.dependency-plugin.version>3.7.0</maven.dependency-plugin.version>
        <maven.jar-plugin.version>3.4.2</maven.jar-plugin.version>
        <maven.surefire-plugin.version>3.5.3</maven.surefire-plugin.version>

        <jansi.version>2.4.2</jansi.version>

        <!-- NEW: pin Yetus to silence old transitive POM warnings -->
        <yetus.audience.version>0.15.1</yetus.audience.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j.api.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- NEW: Pin old transitive org.apache.yetus:audience-annotations -->
            <dependency>
                <groupId>org.apache.yetus</groupId>
                <artifactId>audience-annotations</artifactId>
                <version>${yetus.audience.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${apache.commons.cli}</version>
        </dependency>

        <!-- Log4j2 API + Core + SLF4J bridge -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.api.version}</version>
        </dependency>
        <!-- Optional: bridge java.util.logging to SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>

        <!-- jMetal 5.x layout preserved -->
        <dependency>
            <groupId>org.uma.jmetal</groupId>
            <artifactId>jmetal-core</artifactId>
            <version>${jmetal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.uma.jmetal</groupId>
            <artifactId>jmetal-algorithm</artifactId>
            <version>${jmetal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.uma.jmetal</groupId>
            <artifactId>jmetal-problem</artifactId>
            <version>${jmetal.version}</version>
        </dependency>

        <!-- Kotlin stdlib setup (kept as in your structure) -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.stdlib.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.test.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlin.coroutines.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>${jansi.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Parquet core + Hadoop integration -->
        <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-hadoop</artifactId>
            <version>${parquet.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-reload4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Hadoop classes used by Parquet (Configuration, Path) -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-reload4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Snappy codec used by Parquet -->
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${snappy.version}</version>
        </dependency>

        <!-- NEW: lightweight direct dep to make resolution deterministic -->
        <dependency>
            <groupId>org.apache.yetus</groupId>
            <artifactId>audience-annotations</artifactId>
            <version>${yetus.audience.version}</version>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <build>

        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>it.uniud.newbestsub.program.Program</mainClass>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>src/main/assembly/test-jar-with-dependencies.xml</descriptor>
                    </descriptors>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>it.uniud.newbestsub.program.Program</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Kotlin (version via property, jvmTarget=21) -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${maven.compiler.target}</jvmTarget>
                </configuration>
            </plugin>

            <!-- Surefire 3.x natively supports JUnit 5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>${dokka.version}</version>
                <executions>
                    <execution>
                        <phase>none</phase>
                        <goals>
                            <goal>dokka</goal>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDir>${project.basedir}/target/docs</outputDir>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
