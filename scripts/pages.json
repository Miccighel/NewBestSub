[{"name":"abstract val target: String","description":"it.uniud.newbestsub.dataset.model.ProgressEvent.target","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-progress-event/target.html","searchKeys":["target","abstract val target: String","it.uniud.newbestsub.dataset.model.ProgressEvent.target"]},{"name":"abstract val threadName: String","description":"it.uniud.newbestsub.dataset.model.ProgressEvent.threadName","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-progress-event/thread-name.html","searchKeys":["threadName","abstract val threadName: String","it.uniud.newbestsub.dataset.model.ProgressEvent.threadName"]},{"name":"class BestSubsetProblem(parameters: Parameters, numberOfTopics: Int, precomputedData: PrecomputedData, val topicLabels: Array<String>, legacyBoxedCorrelation: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution) : BinaryProblem","description":"it.uniud.newbestsub.problem.BestSubsetProblem","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/index.html","searchKeys":["BestSubsetProblem","class BestSubsetProblem(parameters: Parameters, numberOfTopics: Int, precomputedData: PrecomputedData, val topicLabels: Array<String>, legacyBoxedCorrelation: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution) : BinaryProblem","it.uniud.newbestsub.problem.BestSubsetProblem"]},{"name":"class BestSubsetSolution(numberOfVariables: Int, numberOfObjectives: Int, numberOfTopics: Int, topicLabels: Array<String>, forcedCardinality: Int?) : DefaultBinarySolution","description":"it.uniud.newbestsub.problem.BestSubsetSolution","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/index.html","searchKeys":["BestSubsetSolution","class BestSubsetSolution(numberOfVariables: Int, numberOfObjectives: Int, numberOfTopics: Int, topicLabels: Array<String>, forcedCardinality: Int?) : DefaultBinarySolution","it.uniud.newbestsub.problem.BestSubsetSolution"]},{"name":"class BinaryPruningCrossover(probability: Double) : CrossoverOperator<BinarySolution> ","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/index.html","searchKeys":["BinaryPruningCrossover","class BinaryPruningCrossover(probability: Double) : CrossoverOperator<BinarySolution> ","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover"]},{"name":"class BitFlipMutation(probability: Double) : MutationOperator<BinarySolution> ","description":"it.uniud.newbestsub.problem.operators.BitFlipMutation","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-bit-flip-mutation/index.html","searchKeys":["BitFlipMutation","class BitFlipMutation(probability: Double) : MutationOperator<BinarySolution> ","it.uniud.newbestsub.problem.operators.BitFlipMutation"]},{"name":"class CSVView","description":"it.uniud.newbestsub.dataset.view.CSVView","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/index.html","searchKeys":["CSVView","class CSVView","it.uniud.newbestsub.dataset.view.CSVView"]},{"name":"class DatasetController(targetToAchieve: String)","description":"it.uniud.newbestsub.dataset.DatasetController","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/index.html","searchKeys":["DatasetController","class DatasetController(targetToAchieve: String)","it.uniud.newbestsub.dataset.DatasetController"]},{"name":"class DatasetModel","description":"it.uniud.newbestsub.dataset.DatasetModel","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/index.html","searchKeys":["DatasetModel","class DatasetModel","it.uniud.newbestsub.dataset.DatasetModel"]},{"name":"class DatasetView","description":"it.uniud.newbestsub.dataset.DatasetView","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/index.html","searchKeys":["DatasetView","class DatasetView","it.uniud.newbestsub.dataset.DatasetView"]},{"name":"class FixedKSwapMutation(probability: Double) : MutationOperator<BinarySolution> ","description":"it.uniud.newbestsub.problem.operators.FixedKSwapMutation","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-fixed-k-swap-mutation/index.html","searchKeys":["FixedKSwapMutation","class FixedKSwapMutation(probability: Double) : MutationOperator<BinarySolution> ","it.uniud.newbestsub.problem.operators.FixedKSwapMutation"]},{"name":"class ParquetView","description":"it.uniud.newbestsub.dataset.view.ParquetView","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/index.html","searchKeys":["ParquetView","class ParquetView","it.uniud.newbestsub.dataset.view.ParquetView"]},{"name":"const val AGGREGATED_DATA_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.AGGREGATED_DATA_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-a-g-g-r-e-g-a-t-e-d_-d-a-t-a_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["AGGREGATED_DATA_FILE_SUFFIX","const val AGGREGATED_DATA_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.AGGREGATED_DATA_FILE_SUFFIX"]},{"name":"const val CARDINALITY_NOT_AVAILABLE: String","description":"it.uniud.newbestsub.utils.Constants.CARDINALITY_NOT_AVAILABLE","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-c-a-r-d-i-n-a-l-i-t-y_-n-o-t_-a-v-a-i-l-a-b-l-e.html","searchKeys":["CARDINALITY_NOT_AVAILABLE","const val CARDINALITY_NOT_AVAILABLE: String","it.uniud.newbestsub.utils.Constants.CARDINALITY_NOT_AVAILABLE"]},{"name":"const val CORRELATION_KENDALL: String","description":"it.uniud.newbestsub.utils.Constants.CORRELATION_KENDALL","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-c-o-r-r-e-l-a-t-i-o-n_-k-e-n-d-a-l-l.html","searchKeys":["CORRELATION_KENDALL","const val CORRELATION_KENDALL: String","it.uniud.newbestsub.utils.Constants.CORRELATION_KENDALL"]},{"name":"const val CORRELATION_PEARSON: String","description":"it.uniud.newbestsub.utils.Constants.CORRELATION_PEARSON","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-c-o-r-r-e-l-a-t-i-o-n_-p-e-a-r-s-o-n.html","searchKeys":["CORRELATION_PEARSON","const val CORRELATION_PEARSON: String","it.uniud.newbestsub.utils.Constants.CORRELATION_PEARSON"]},{"name":"const val CSV_FILE_EXTENSION: String","description":"it.uniud.newbestsub.utils.Constants.CSV_FILE_EXTENSION","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-c-s-v_-f-i-l-e_-e-x-t-e-n-s-i-o-n.html","searchKeys":["CSV_FILE_EXTENSION","const val CSV_FILE_EXTENSION: String","it.uniud.newbestsub.utils.Constants.CSV_FILE_EXTENSION"]},{"name":"const val FILE_NAME_SEPARATOR: String","description":"it.uniud.newbestsub.utils.Constants.FILE_NAME_SEPARATOR","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-f-i-l-e_-n-a-m-e_-s-e-p-a-r-a-t-o-r.html","searchKeys":["FILE_NAME_SEPARATOR","const val FILE_NAME_SEPARATOR: String","it.uniud.newbestsub.utils.Constants.FILE_NAME_SEPARATOR"]},{"name":"const val FUNCTION_VALUES_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.FUNCTION_VALUES_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-f-u-n-c-t-i-o-n_-v-a-l-u-e-s_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["FUNCTION_VALUES_FILE_SUFFIX","const val FUNCTION_VALUES_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.FUNCTION_VALUES_FILE_SUFFIX"]},{"name":"const val GENERATION_STRIDE: Int = 5","description":"it.uniud.newbestsub.utils.Constants.GENERATION_STRIDE","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-g-e-n-e-r-a-t-i-o-n_-s-t-r-i-d-e.html","searchKeys":["GENERATION_STRIDE","const val GENERATION_STRIDE: Int = 5","it.uniud.newbestsub.utils.Constants.GENERATION_STRIDE"]},{"name":"const val GENERATION_WARMUP: Int = 20","description":"it.uniud.newbestsub.utils.Constants.GENERATION_WARMUP","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-g-e-n-e-r-a-t-i-o-n_-w-a-r-m-u-p.html","searchKeys":["GENERATION_WARMUP","const val GENERATION_WARMUP: Int = 20","it.uniud.newbestsub.utils.Constants.GENERATION_WARMUP"]},{"name":"const val INFO_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.INFO_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-i-n-f-o_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["INFO_FILE_SUFFIX","const val INFO_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.INFO_FILE_SUFFIX"]},{"name":"const val LOGGING_FACTOR: Int = 1","description":"it.uniud.newbestsub.utils.Constants.LOGGING_FACTOR","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-l-o-g-g-i-n-g_-f-a-c-t-o-r.html","searchKeys":["LOGGING_FACTOR","const val LOGGING_FACTOR: Int = 1","it.uniud.newbestsub.utils.Constants.LOGGING_FACTOR"]},{"name":"const val LOG_FILE_NAME: String","description":"it.uniud.newbestsub.utils.Constants.LOG_FILE_NAME","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-l-o-g_-f-i-l-e_-n-a-m-e.html","searchKeys":["LOG_FILE_NAME","const val LOG_FILE_NAME: String","it.uniud.newbestsub.utils.Constants.LOG_FILE_NAME"]},{"name":"const val LOG_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.LOG_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-l-o-g_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["LOG_FILE_SUFFIX","const val LOG_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.LOG_FILE_SUFFIX"]},{"name":"const val MERGED_RESULT_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.MERGED_RESULT_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-m-e-r-g-e-d_-r-e-s-u-l-t_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["MERGED_RESULT_FILE_SUFFIX","const val MERGED_RESULT_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.MERGED_RESULT_FILE_SUFFIX"]},{"name":"const val NEWBESTSUB_EXPERIMENTS_NAME: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_NAME","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-e-x-p-e-r-i-m-e-n-t-s_-n-a-m-e.html","searchKeys":["NEWBESTSUB_EXPERIMENTS_NAME","const val NEWBESTSUB_EXPERIMENTS_NAME: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_NAME"]},{"name":"const val NEWBESTSUB_NAME: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_NAME","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-n-a-m-e.html","searchKeys":["NEWBESTSUB_NAME","const val NEWBESTSUB_NAME: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_NAME"]},{"name":"const val TARGET_ALL: String","description":"it.uniud.newbestsub.utils.Constants.TARGET_ALL","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-a-r-g-e-t_-a-l-l.html","searchKeys":["TARGET_ALL","const val TARGET_ALL: String","it.uniud.newbestsub.utils.Constants.TARGET_ALL"]},{"name":"const val TARGET_AVERAGE: String","description":"it.uniud.newbestsub.utils.Constants.TARGET_AVERAGE","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-a-r-g-e-t_-a-v-e-r-a-g-e.html","searchKeys":["TARGET_AVERAGE","const val TARGET_AVERAGE: String","it.uniud.newbestsub.utils.Constants.TARGET_AVERAGE"]},{"name":"const val TARGET_BEST: String","description":"it.uniud.newbestsub.utils.Constants.TARGET_BEST","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-a-r-g-e-t_-b-e-s-t.html","searchKeys":["TARGET_BEST","const val TARGET_BEST: String","it.uniud.newbestsub.utils.Constants.TARGET_BEST"]},{"name":"const val TARGET_WORST: String","description":"it.uniud.newbestsub.utils.Constants.TARGET_WORST","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-a-r-g-e-t_-w-o-r-s-t.html","searchKeys":["TARGET_WORST","const val TARGET_WORST: String","it.uniud.newbestsub.utils.Constants.TARGET_WORST"]},{"name":"const val TOP_SOLUTIONS_NUMBER: Int = 10","description":"it.uniud.newbestsub.utils.Constants.TOP_SOLUTIONS_NUMBER","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-o-p_-s-o-l-u-t-i-o-n-s_-n-u-m-b-e-r.html","searchKeys":["TOP_SOLUTIONS_NUMBER","const val TOP_SOLUTIONS_NUMBER: Int = 10","it.uniud.newbestsub.utils.Constants.TOP_SOLUTIONS_NUMBER"]},{"name":"const val VARIABLE_VALUES_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.VARIABLE_VALUES_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-v-a-r-i-a-b-l-e_-v-a-l-u-e-s_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["VARIABLE_VALUES_FILE_SUFFIX","const val VARIABLE_VALUES_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.VARIABLE_VALUES_FILE_SUFFIX"]},{"name":"constructor()","description":"it.uniud.newbestsub.dataset.DatasetModel.DatasetModel","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/-dataset-model.html","searchKeys":["DatasetModel","constructor()","it.uniud.newbestsub.dataset.DatasetModel.DatasetModel"]},{"name":"constructor()","description":"it.uniud.newbestsub.dataset.DatasetView.DatasetView","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/-dataset-view.html","searchKeys":["DatasetView","constructor()","it.uniud.newbestsub.dataset.DatasetView.DatasetView"]},{"name":"constructor()","description":"it.uniud.newbestsub.dataset.view.CSVView.CSVView","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/-c-s-v-view.html","searchKeys":["CSVView","constructor()","it.uniud.newbestsub.dataset.view.CSVView.CSVView"]},{"name":"constructor()","description":"it.uniud.newbestsub.dataset.view.ParquetView.ParquetView","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/-parquet-view.html","searchKeys":["ParquetView","constructor()","it.uniud.newbestsub.dataset.view.ParquetView.ParquetView"]},{"name":"constructor(averagePrecisionBySystem: Array<DoubleArray>, topicColumnViewByTopic: Array<DoubleArray>, fullSetMeanAPBySystem: DoubleArray, numberOfSystems: Int, numberOfTopics: Int, systemIdsInOrder: List<String>, systemIndexById: Map<String, Int>)","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.PrecomputedData","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/-precomputed-data.html","searchKeys":["PrecomputedData","constructor(averagePrecisionBySystem: Array<DoubleArray>, topicColumnViewByTopic: Array<DoubleArray>, fullSetMeanAPBySystem: DoubleArray, numberOfSystems: Int, numberOfTopics: Int, systemIdsInOrder: List<String>, systemIndexById: Map<String, Int>)","it.uniud.newbestsub.dataset.model.PrecomputedData.PrecomputedData"]},{"name":"constructor(datasetName: String, correlationMethod: String, targetToAchieve: String, numberOfIterations: Int, numberOfRepetitions: Int, populationSize: Int, currentExecution: Int, percentiles: List<Int>, deterministic: Boolean = false, seed: Long? = null)","description":"it.uniud.newbestsub.dataset.Parameters.Parameters","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/-parameters.html","searchKeys":["Parameters","constructor(datasetName: String, correlationMethod: String, targetToAchieve: String, numberOfIterations: Int, numberOfRepetitions: Int, populationSize: Int, currentExecution: Int, percentiles: List<Int>, deterministic: Boolean = false, seed: Long? = null)","it.uniud.newbestsub.dataset.Parameters.Parameters"]},{"name":"constructor(funWriter: BufferedWriter, varWriter: BufferedWriter)","description":"it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.StreamHandles","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/-stream-handles/-stream-handles.html","searchKeys":["StreamHandles","constructor(funWriter: BufferedWriter, varWriter: BufferedWriter)","it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.StreamHandles"]},{"name":"constructor(numberOfVariables: Int, numberOfObjectives: Int, numberOfTopics: Int, topicLabels: Array<String>, forcedCardinality: Int?)","description":"it.uniud.newbestsub.problem.BestSubsetSolution.BestSubsetSolution","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/-best-subset-solution.html","searchKeys":["BestSubsetSolution","constructor(numberOfVariables: Int, numberOfObjectives: Int, numberOfTopics: Int, topicLabels: Array<String>, forcedCardinality: Int?)","it.uniud.newbestsub.problem.BestSubsetSolution.BestSubsetSolution"]},{"name":"constructor(parameters: Parameters, numberOfTopics: Int, averagePrecisions: MutableMap<String, DoubleArray>, meanAveragePrecisions: DoubleArray, topicLabels: Array<String>, correlationStrategy: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution)","description":"it.uniud.newbestsub.problem.BestSubsetProblem.BestSubsetProblem","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/-best-subset-problem.html","searchKeys":["BestSubsetProblem","constructor(parameters: Parameters, numberOfTopics: Int, averagePrecisions: MutableMap<String, DoubleArray>, meanAveragePrecisions: DoubleArray, topicLabels: Array<String>, correlationStrategy: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution)","it.uniud.newbestsub.problem.BestSubsetProblem.BestSubsetProblem"]},{"name":"constructor(parameters: Parameters, numberOfTopics: Int, precomputedData: PrecomputedData, topicLabels: Array<String>, legacyBoxedCorrelation: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution)","description":"it.uniud.newbestsub.problem.BestSubsetProblem.BestSubsetProblem","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/-best-subset-problem.html","searchKeys":["BestSubsetProblem","constructor(parameters: Parameters, numberOfTopics: Int, precomputedData: PrecomputedData, topicLabels: Array<String>, legacyBoxedCorrelation: (DoubleArray, DoubleArray) -> Double, targetStrategy: (BinarySolution, Double) -> BinarySolution)","it.uniud.newbestsub.problem.BestSubsetProblem.BestSubsetProblem"]},{"name":"constructor(probability: Double)","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.BinaryPruningCrossover","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/-binary-pruning-crossover.html","searchKeys":["BinaryPruningCrossover","constructor(probability: Double)","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.BinaryPruningCrossover"]},{"name":"constructor(probability: Double)","description":"it.uniud.newbestsub.problem.operators.BitFlipMutation.BitFlipMutation","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-bit-flip-mutation/-bit-flip-mutation.html","searchKeys":["BitFlipMutation","constructor(probability: Double)","it.uniud.newbestsub.problem.operators.BitFlipMutation.BitFlipMutation"]},{"name":"constructor(probability: Double)","description":"it.uniud.newbestsub.problem.operators.FixedKSwapMutation.FixedKSwapMutation","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-fixed-k-swap-mutation/-fixed-k-swap-mutation.html","searchKeys":["FixedKSwapMutation","constructor(probability: Double)","it.uniud.newbestsub.problem.operators.FixedKSwapMutation.FixedKSwapMutation"]},{"name":"constructor(target: String, threadName: String, blocks: Map<Int, List<String>>)","description":"it.uniud.newbestsub.dataset.model.TopKReplaceBatch.TopKReplaceBatch","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-top-k-replace-batch/-top-k-replace-batch.html","searchKeys":["TopKReplaceBatch","constructor(target: String, threadName: String, blocks: Map<Int, List<String>>)","it.uniud.newbestsub.dataset.model.TopKReplaceBatch.TopKReplaceBatch"]},{"name":"constructor(target: String, threadName: String, cardinality: Int, correlation: Double, functionValuesCsvLine: String, variableValuesCsvLine: String)","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.CardinalityResult","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/-cardinality-result.html","searchKeys":["CardinalityResult","constructor(target: String, threadName: String, cardinality: Int, correlation: Double, functionValuesCsvLine: String, variableValuesCsvLine: String)","it.uniud.newbestsub.dataset.model.CardinalityResult.CardinalityResult"]},{"name":"constructor(target: String, threadName: String, computingTime: Long)","description":"it.uniud.newbestsub.dataset.model.RunCompleted.RunCompleted","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-run-completed/-run-completed.html","searchKeys":["RunCompleted","constructor(target: String, threadName: String, computingTime: Long)","it.uniud.newbestsub.dataset.model.RunCompleted.RunCompleted"]},{"name":"constructor(targetToAchieve: String)","description":"it.uniud.newbestsub.dataset.DatasetController.DatasetController","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/-dataset-controller.html","searchKeys":["DatasetController","constructor(targetToAchieve: String)","it.uniud.newbestsub.dataset.DatasetController.DatasetController"]},{"name":"data class CardinalityResult(val target: String, val threadName: String, val cardinality: Int, val correlation: Double, val functionValuesCsvLine: String, val variableValuesCsvLine: String) : ProgressEvent","description":"it.uniud.newbestsub.dataset.model.CardinalityResult","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/index.html","searchKeys":["CardinalityResult","data class CardinalityResult(val target: String, val threadName: String, val cardinality: Int, val correlation: Double, val functionValuesCsvLine: String, val variableValuesCsvLine: String) : ProgressEvent","it.uniud.newbestsub.dataset.model.CardinalityResult"]},{"name":"data class Parameters(val datasetName: String, val correlationMethod: String, val targetToAchieve: String, val numberOfIterations: Int, val numberOfRepetitions: Int, val populationSize: Int, val currentExecution: Int, val percentiles: List<Int>, val deterministic: Boolean = false, val seed: Long? = null)","description":"it.uniud.newbestsub.dataset.Parameters","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/index.html","searchKeys":["Parameters","data class Parameters(val datasetName: String, val correlationMethod: String, val targetToAchieve: String, val numberOfIterations: Int, val numberOfRepetitions: Int, val populationSize: Int, val currentExecution: Int, val percentiles: List<Int>, val deterministic: Boolean = false, val seed: Long? = null)","it.uniud.newbestsub.dataset.Parameters"]},{"name":"data class PrecomputedData(val averagePrecisionBySystem: Array<DoubleArray>, val topicColumnViewByTopic: Array<DoubleArray>, val fullSetMeanAPBySystem: DoubleArray, val numberOfSystems: Int, val numberOfTopics: Int, val systemIdsInOrder: List<String>, val systemIndexById: Map<String, Int>)","description":"it.uniud.newbestsub.dataset.model.PrecomputedData","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/index.html","searchKeys":["PrecomputedData","data class PrecomputedData(val averagePrecisionBySystem: Array<DoubleArray>, val topicColumnViewByTopic: Array<DoubleArray>, val fullSetMeanAPBySystem: DoubleArray, val numberOfSystems: Int, val numberOfTopics: Int, val systemIdsInOrder: List<String>, val systemIndexById: Map<String, Int>)","it.uniud.newbestsub.dataset.model.PrecomputedData"]},{"name":"data class RunCompleted(val target: String, val threadName: String, val computingTime: Long) : ProgressEvent","description":"it.uniud.newbestsub.dataset.model.RunCompleted","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-run-completed/index.html","searchKeys":["RunCompleted","data class RunCompleted(val target: String, val threadName: String, val computingTime: Long) : ProgressEvent","it.uniud.newbestsub.dataset.model.RunCompleted"]},{"name":"data class StreamHandles(val funWriter: BufferedWriter, val varWriter: BufferedWriter)","description":"it.uniud.newbestsub.dataset.view.CSVView.StreamHandles","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/-stream-handles/index.html","searchKeys":["StreamHandles","data class StreamHandles(val funWriter: BufferedWriter, val varWriter: BufferedWriter)","it.uniud.newbestsub.dataset.view.CSVView.StreamHandles"]},{"name":"data class TopKReplaceBatch(val target: String, val threadName: String, val blocks: Map<Int, List<String>>) : ProgressEvent","description":"it.uniud.newbestsub.dataset.model.TopKReplaceBatch","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-top-k-replace-batch/index.html","searchKeys":["TopKReplaceBatch","data class TopKReplaceBatch(val target: String, val threadName: String, val blocks: Map<Int, List<String>>) : ProgressEvent","it.uniud.newbestsub.dataset.model.TopKReplaceBatch"]},{"name":"fun <T> withSeed(seed: Long, block: () -> T): T","description":"it.uniud.newbestsub.utils.RandomBridge.withSeed","location":"-new-best-sub/it.uniud.newbestsub.utils/-random-bridge/with-seed.html","searchKeys":["withSeed","fun <T> withSeed(seed: Long, block: () -> T): T","it.uniud.newbestsub.utils.RandomBridge.withSeed"]},{"name":"fun BinarySolution.getCardinality(): Double","description":"it.uniud.newbestsub.problem.getCardinality","location":"-new-best-sub/it.uniud.newbestsub.problem/get-cardinality.html","searchKeys":["getCardinality","fun BinarySolution.getCardinality(): Double","it.uniud.newbestsub.problem.getCardinality"]},{"name":"fun BinarySolution.getCorrelation(): Double","description":"it.uniud.newbestsub.problem.getCorrelation","location":"-new-best-sub/it.uniud.newbestsub.problem/get-correlation.html","searchKeys":["getCorrelation","fun BinarySolution.getCorrelation(): Double","it.uniud.newbestsub.problem.getCorrelation"]},{"name":"fun appendCardinality(model: DatasetModel, event: CardinalityResult)","description":"it.uniud.newbestsub.dataset.DatasetView.appendCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/append-cardinality.html","searchKeys":["appendCardinality","fun appendCardinality(model: DatasetModel, event: CardinalityResult)","it.uniud.newbestsub.dataset.DatasetView.appendCardinality"]},{"name":"fun buildContainerFolderName(datasetName: String, correlationMethod: String, numberOfTopics: Int, numberOfSystems: Int, populationSize: Int, numberOfIterations: Int, numberOfRepetitions: Int, expansionCoefficient: Int, includePercentiles: Boolean, percentiles: List<Int>): String","description":"it.uniud.newbestsub.utils.Tools.buildContainerFolderName","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/build-container-folder-name.html","searchKeys":["buildContainerFolderName","fun buildContainerFolderName(datasetName: String, correlationMethod: String, numberOfTopics: Int, numberOfSystems: Int, populationSize: Int, numberOfIterations: Int, numberOfRepetitions: Int, expansionCoefficient: Int, includePercentiles: Boolean, percentiles: List<Int>): String","it.uniud.newbestsub.utils.Tools.buildContainerFolderName"]},{"name":"fun buildFinalLogFilePathFromParams(paramsToken: String): String","description":"it.uniud.newbestsub.utils.LogManager.buildFinalLogFilePathFromParams","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/build-final-log-file-path-from-params.html","searchKeys":["buildFinalLogFilePathFromParams","fun buildFinalLogFilePathFromParams(paramsToken: String): String","it.uniud.newbestsub.utils.LogManager.buildFinalLogFilePathFromParams"]},{"name":"fun buildParamsToken(datasetName: String, correlationMethod: String, numberOfTopics: Int, numberOfSystems: Int, populationSize: Int, numberOfIterations: Int, numberOfRepetitions: Int, expansionCoefficient: Int, includePercentiles: Boolean, percentiles: List<Int>): String","description":"it.uniud.newbestsub.utils.Tools.buildParamsToken","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/build-params-token.html","searchKeys":["buildParamsToken","fun buildParamsToken(datasetName: String, correlationMethod: String, numberOfTopics: Int, numberOfSystems: Int, populationSize: Int, numberOfIterations: Int, numberOfRepetitions: Int, expansionCoefficient: Int, includePercentiles: Boolean, percentiles: List<Int>): String","it.uniud.newbestsub.utils.Tools.buildParamsToken"]},{"name":"fun buildPrecomputedData(averagePrecisionsBySystem: Map<String, DoubleArray>): PrecomputedData","description":"it.uniud.newbestsub.dataset.model.buildPrecomputedData","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/build-precomputed-data.html","searchKeys":["buildPrecomputedData","fun buildPrecomputedData(averagePrecisionsBySystem: Map<String, DoubleArray>): PrecomputedData","it.uniud.newbestsub.dataset.model.buildPrecomputedData"]},{"name":"fun childSeed(label: String, index: Int = 0): Long","description":"it.uniud.newbestsub.utils.RandomBridge.childSeed","location":"-new-best-sub/it.uniud.newbestsub.utils/-random-bridge/child-seed.html","searchKeys":["childSeed","fun childSeed(label: String, index: Int = 0): Long","it.uniud.newbestsub.utils.RandomBridge.childSeed"]},{"name":"fun clean(dataList: MutableList<String>, logMessage: String)","description":"it.uniud.newbestsub.dataset.DatasetController.clean","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/clean.html","searchKeys":["clean","fun clean(dataList: MutableList<String>, logMessage: String)","it.uniud.newbestsub.dataset.DatasetController.clean"]},{"name":"fun clearAfterSerialization()","description":"it.uniud.newbestsub.dataset.DatasetModel.clearAfterSerialization","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/clear-after-serialization.html","searchKeys":["clearAfterSerialization","fun clearAfterSerialization()","it.uniud.newbestsub.dataset.DatasetModel.clearAfterSerialization"]},{"name":"fun clearLastMutationFlags()","description":"it.uniud.newbestsub.problem.BestSubsetSolution.clearLastMutationFlags","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/clear-last-mutation-flags.html","searchKeys":["clearLastMutationFlags","fun clearLastMutationFlags()","it.uniud.newbestsub.problem.BestSubsetSolution.clearLastMutationFlags"]},{"name":"fun clearPercentiles()","description":"it.uniud.newbestsub.dataset.DatasetModel.clearPercentiles","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/clear-percentiles.html","searchKeys":["clearPercentiles","fun clearPercentiles()","it.uniud.newbestsub.dataset.DatasetModel.clearPercentiles"]},{"name":"fun closeStreams(model: DatasetModel)","description":"it.uniud.newbestsub.dataset.DatasetView.closeStreams","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/close-streams.html","searchKeys":["closeStreams","fun closeStreams(model: DatasetModel)","it.uniud.newbestsub.dataset.DatasetView.closeStreams"]},{"name":"fun closeStreams(model: DatasetModel)","description":"it.uniud.newbestsub.dataset.view.CSVView.closeStreams","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/close-streams.html","searchKeys":["closeStreams","fun closeStreams(model: DatasetModel)","it.uniud.newbestsub.dataset.view.CSVView.closeStreams"]},{"name":"fun closeStreams(model: DatasetModel)","description":"it.uniud.newbestsub.dataset.view.ParquetView.closeStreams","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/close-streams.html","searchKeys":["closeStreams","fun closeStreams(model: DatasetModel)","it.uniud.newbestsub.dataset.view.ParquetView.closeStreams"]},{"name":"fun copy()","description":"it.uniud.newbestsub.dataset.DatasetController.copy","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/copy.html","searchKeys":["copy","fun copy()","it.uniud.newbestsub.dataset.DatasetController.copy"]},{"name":"fun createNewBitSet(numBits: Int, genes: Array<Boolean>? = null): BinarySet","description":"it.uniud.newbestsub.problem.BestSubsetSolution.createNewBitSet","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/create-new-bit-set.html","searchKeys":["createNewBitSet","fun createNewBitSet(numBits: Int, genes: Array<Boolean>? = null): BinarySet","it.uniud.newbestsub.problem.BestSubsetSolution.createNewBitSet"]},{"name":"fun csvNameNoTs(baseParts: Array<String>, suffix: String): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.csvNameNoTs","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/csv-name-no-ts.html","searchKeys":["csvNameNoTs","fun csvNameNoTs(baseParts: Array<String>, suffix: String): String","it.uniud.newbestsub.dataset.view.ViewPaths.csvNameNoTs"]},{"name":"fun csvNameNoTsMerged(baseParts: Array<String>, suffix: String): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.csvNameNoTsMerged","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/csv-name-no-ts-merged.html","searchKeys":["csvNameNoTsMerged","fun csvNameNoTsMerged(baseParts: Array<String>, suffix: String): String","it.uniud.newbestsub.dataset.view.ViewPaths.csvNameNoTsMerged"]},{"name":"fun ensureCsvDir(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.ensureCsvDir","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/ensure-csv-dir.html","searchKeys":["ensureCsvDir","fun ensureCsvDir(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.ViewPaths.ensureCsvDir"]},{"name":"fun ensureLogDir(): String","description":"it.uniud.newbestsub.utils.LogManager.ensureLogDir","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/ensure-log-dir.html","searchKeys":["ensureLogDir","fun ensureLogDir(): String","it.uniud.newbestsub.utils.LogManager.ensureLogDir"]},{"name":"fun ensureParquetDir(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.ensureParquetDir","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/ensure-parquet-dir.html","searchKeys":["ensureParquetDir","fun ensureParquetDir(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.ViewPaths.ensureParquetDir"]},{"name":"fun ensureReusableLastMaskBuffer(): BooleanArray","description":"it.uniud.newbestsub.problem.BestSubsetSolution.ensureReusableLastMaskBuffer","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/ensure-reusable-last-mask-buffer.html","searchKeys":["ensureReusableLastMaskBuffer","fun ensureReusableLastMaskBuffer(): BooleanArray","it.uniud.newbestsub.problem.BestSubsetSolution.ensureReusableLastMaskBuffer"]},{"name":"fun ensureRunDir(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.ensureRunDir","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/ensure-run-dir.html","searchKeys":["ensureRunDir","fun ensureRunDir(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.ViewPaths.ensureRunDir"]},{"name":"fun expandSystems(expansionCoefficient: Int, trueNumberOfSystems: Int)","description":"it.uniud.newbestsub.dataset.DatasetController.expandSystems","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/expand-systems.html","searchKeys":["expandSystems","fun expandSystems(expansionCoefficient: Int, trueNumberOfSystems: Int)","it.uniud.newbestsub.dataset.DatasetController.expandSystems"]},{"name":"fun expandSystems(expansionCoefficient: Int, trueNumberOfSystems: Int, randomizedAveragePrecisions: Map<String, DoubleArray>, randomizedSystemLabels: Array<String>)","description":"it.uniud.newbestsub.dataset.DatasetModel.expandSystems","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/expand-systems.html","searchKeys":["expandSystems","fun expandSystems(expansionCoefficient: Int, trueNumberOfSystems: Int, randomizedAveragePrecisions: Map<String, DoubleArray>, randomizedSystemLabels: Array<String>)","it.uniud.newbestsub.dataset.DatasetModel.expandSystems"]},{"name":"fun expandTopics(expansionCoefficient: Int)","description":"it.uniud.newbestsub.dataset.DatasetController.expandTopics","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/expand-topics.html","searchKeys":["expandTopics","fun expandTopics(expansionCoefficient: Int)","it.uniud.newbestsub.dataset.DatasetController.expandTopics"]},{"name":"fun expandTopics(expansionCoefficient: Int, randomizedAveragePrecisions: Map<String, DoubleArray>, randomizedTopicLabels: Array<String>)","description":"it.uniud.newbestsub.dataset.DatasetModel.expandTopics","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/expand-topics.html","searchKeys":["expandTopics","fun expandTopics(expansionCoefficient: Int, randomizedAveragePrecisions: Map<String, DoubleArray>, randomizedTopicLabels: Array<String>)","it.uniud.newbestsub.dataset.DatasetModel.expandTopics"]},{"name":"fun fastPearsonBoxed(left: DoubleArray, right: DoubleArray): Double","description":"it.uniud.newbestsub.math.Correlations.fastPearsonBoxed","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/fast-pearson-boxed.html","searchKeys":["fastPearsonBoxed","fun fastPearsonBoxed(left: DoubleArray, right: DoubleArray): Double","it.uniud.newbestsub.math.Correlations.fastPearsonBoxed"]},{"name":"fun fastPearsonPrimitive(left: DoubleArray, right: DoubleArray): Double","description":"it.uniud.newbestsub.math.Correlations.fastPearsonPrimitive","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/fast-pearson-primitive.html","searchKeys":["fastPearsonPrimitive","fun fastPearsonPrimitive(left: DoubleArray, right: DoubleArray): Double","it.uniud.newbestsub.math.Correlations.fastPearsonPrimitive"]},{"name":"fun fileBaseParts(model: DatasetModel, target: String): Array<String>","description":"it.uniud.newbestsub.dataset.view.ViewPaths.fileBaseParts","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/file-base-parts.html","searchKeys":["fileBaseParts","fun fileBaseParts(model: DatasetModel, target: String): Array<String>","it.uniud.newbestsub.dataset.view.ViewPaths.fileBaseParts"]},{"name":"fun findCorrelationForCardinality(cardinality: Double): Double?","description":"it.uniud.newbestsub.dataset.DatasetModel.findCorrelationForCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/find-correlation-for-cardinality.html","searchKeys":["findCorrelationForCardinality","fun findCorrelationForCardinality(cardinality: Double): Double?","it.uniud.newbestsub.dataset.DatasetModel.findCorrelationForCardinality"]},{"name":"fun folderBaseName(vararg parts: Any?): String","description":"it.uniud.newbestsub.utils.Tools.folderBaseName","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/folder-base-name.html","searchKeys":["folderBaseName","fun folderBaseName(vararg parts: Any?): String","it.uniud.newbestsub.utils.Tools.folderBaseName"]},{"name":"fun getAggregatedDataFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-aggregated-data-file-path.html","searchKeys":["getAggregatedDataFilePath","fun getAggregatedDataFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataFilePath"]},{"name":"fun getAggregatedDataFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.view.CSVView.getAggregatedDataFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/get-aggregated-data-file-path.html","searchKeys":["getAggregatedDataFilePath","fun getAggregatedDataFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.view.CSVView.getAggregatedDataFilePath"]},{"name":"fun getAggregatedDataMergedFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataMergedFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-aggregated-data-merged-file-path.html","searchKeys":["getAggregatedDataMergedFilePath","fun getAggregatedDataMergedFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataMergedFilePath"]},{"name":"fun getAggregatedDataMergedParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataMergedParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-aggregated-data-merged-parquet-path.html","searchKeys":["getAggregatedDataMergedParquetPath","fun getAggregatedDataMergedParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataMergedParquetPath"]},{"name":"fun getAggregatedDataParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-aggregated-data-parquet-path.html","searchKeys":["getAggregatedDataParquetPath","fun getAggregatedDataParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getAggregatedDataParquetPath"]},{"name":"fun getAggregatedDataParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.view.ParquetView.getAggregatedDataParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/get-aggregated-data-parquet-path.html","searchKeys":["getAggregatedDataParquetPath","fun getAggregatedDataParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.view.ParquetView.getAggregatedDataParquetPath"]},{"name":"fun getBootstrapLogFilePath(): String","description":"it.uniud.newbestsub.utils.LogManager.getBootstrapLogFilePath","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/get-bootstrap-log-file-path.html","searchKeys":["getBootstrapLogFilePath","fun getBootstrapLogFilePath(): String","it.uniud.newbestsub.utils.LogManager.getBootstrapLogFilePath"]},{"name":"fun getCardinality(): Double","description":"it.uniud.newbestsub.problem.BestSubsetSolution.getCardinality","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/get-cardinality.html","searchKeys":["getCardinality","fun getCardinality(): Double","it.uniud.newbestsub.problem.BestSubsetSolution.getCardinality"]},{"name":"fun getCorrelation(): Double","description":"it.uniud.newbestsub.problem.BestSubsetSolution.getCorrelation","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/get-correlation.html","searchKeys":["getCorrelation","fun getCorrelation(): Double","it.uniud.newbestsub.problem.BestSubsetSolution.getCorrelation"]},{"name":"fun getFunctionValuesFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-function-values-file-path.html","searchKeys":["getFunctionValuesFilePath","fun getFunctionValuesFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesFilePath"]},{"name":"fun getFunctionValuesFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.CSVView.getFunctionValuesFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/get-function-values-file-path.html","searchKeys":["getFunctionValuesFilePath","fun getFunctionValuesFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.CSVView.getFunctionValuesFilePath"]},{"name":"fun getFunctionValuesMergedFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesMergedFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-function-values-merged-file-path.html","searchKeys":["getFunctionValuesMergedFilePath","fun getFunctionValuesMergedFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesMergedFilePath"]},{"name":"fun getFunctionValuesMergedParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesMergedParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-function-values-merged-parquet-path.html","searchKeys":["getFunctionValuesMergedParquetPath","fun getFunctionValuesMergedParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesMergedParquetPath"]},{"name":"fun getFunctionValuesParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-function-values-parquet-path.html","searchKeys":["getFunctionValuesParquetPath","fun getFunctionValuesParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getFunctionValuesParquetPath"]},{"name":"fun getInfoFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getInfoFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-info-file-path.html","searchKeys":["getInfoFilePath","fun getInfoFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getInfoFilePath"]},{"name":"fun getInfoFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.view.CSVView.getInfoFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/get-info-file-path.html","searchKeys":["getInfoFilePath","fun getInfoFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.view.CSVView.getInfoFilePath"]},{"name":"fun getInfoMergedFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getInfoMergedFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-info-merged-file-path.html","searchKeys":["getInfoMergedFilePath","fun getInfoMergedFilePath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getInfoMergedFilePath"]},{"name":"fun getInfoMergedParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getInfoMergedParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-info-merged-parquet-path.html","searchKeys":["getInfoMergedParquetPath","fun getInfoMergedParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getInfoMergedParquetPath"]},{"name":"fun getInfoParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.DatasetView.getInfoParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-info-parquet-path.html","searchKeys":["getInfoParquetPath","fun getInfoParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.DatasetView.getInfoParquetPath"]},{"name":"fun getInfoParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","description":"it.uniud.newbestsub.dataset.view.ParquetView.getInfoParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/get-info-parquet-path.html","searchKeys":["getInfoParquetPath","fun getInfoParquetPath(model: DatasetModel, isTargetAll: Boolean = false): String","it.uniud.newbestsub.dataset.view.ParquetView.getInfoParquetPath"]},{"name":"fun getMean(run: DoubleArray, useColumns: BooleanArray): Double","description":"it.uniud.newbestsub.math.Statistics.getMean","location":"-new-best-sub/it.uniud.newbestsub.math/-statistics/get-mean.html","searchKeys":["getMean","fun getMean(run: DoubleArray, useColumns: BooleanArray): Double","it.uniud.newbestsub.math.Statistics.getMean"]},{"name":"fun getTopSolutionsFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-top-solutions-file-path.html","searchKeys":["getTopSolutionsFilePath","fun getTopSolutionsFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsFilePath"]},{"name":"fun getTopSolutionsFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.CSVView.getTopSolutionsFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/get-top-solutions-file-path.html","searchKeys":["getTopSolutionsFilePath","fun getTopSolutionsFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.CSVView.getTopSolutionsFilePath"]},{"name":"fun getTopSolutionsMergedFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsMergedFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-top-solutions-merged-file-path.html","searchKeys":["getTopSolutionsMergedFilePath","fun getTopSolutionsMergedFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsMergedFilePath"]},{"name":"fun getTopSolutionsMergedParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsMergedParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-top-solutions-merged-parquet-path.html","searchKeys":["getTopSolutionsMergedParquetPath","fun getTopSolutionsMergedParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsMergedParquetPath"]},{"name":"fun getTopSolutionsParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-top-solutions-parquet-path.html","searchKeys":["getTopSolutionsParquetPath","fun getTopSolutionsParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getTopSolutionsParquetPath"]},{"name":"fun getVariableValueString(variableIndex: Int): String","description":"it.uniud.newbestsub.problem.BestSubsetSolution.getVariableValueString","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/get-variable-value-string.html","searchKeys":["getVariableValueString","fun getVariableValueString(variableIndex: Int): String","it.uniud.newbestsub.problem.BestSubsetSolution.getVariableValueString"]},{"name":"fun getVariableValuesFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getVariableValuesFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-variable-values-file-path.html","searchKeys":["getVariableValuesFilePath","fun getVariableValuesFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getVariableValuesFilePath"]},{"name":"fun getVariableValuesFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.view.CSVView.getVariableValuesFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/get-variable-values-file-path.html","searchKeys":["getVariableValuesFilePath","fun getVariableValuesFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.view.CSVView.getVariableValuesFilePath"]},{"name":"fun getVariableValuesMergedFilePath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getVariableValuesMergedFilePath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-variable-values-merged-file-path.html","searchKeys":["getVariableValuesMergedFilePath","fun getVariableValuesMergedFilePath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getVariableValuesMergedFilePath"]},{"name":"fun getVariableValuesMergedParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getVariableValuesMergedParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-variable-values-merged-parquet-path.html","searchKeys":["getVariableValuesMergedParquetPath","fun getVariableValuesMergedParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getVariableValuesMergedParquetPath"]},{"name":"fun getVariableValuesParquetPath(model: DatasetModel): String","description":"it.uniud.newbestsub.dataset.DatasetView.getVariableValuesParquetPath","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/get-variable-values-parquet-path.html","searchKeys":["getVariableValuesParquetPath","fun getVariableValuesParquetPath(model: DatasetModel): String","it.uniud.newbestsub.dataset.DatasetView.getVariableValuesParquetPath"]},{"name":"fun installDeterministic(seed: Long)","description":"it.uniud.newbestsub.utils.RandomBridge.installDeterministic","location":"-new-best-sub/it.uniud.newbestsub.utils/-random-bridge/install-deterministic.html","searchKeys":["installDeterministic","fun installDeterministic(seed: Long)","it.uniud.newbestsub.utils.RandomBridge.installDeterministic"]},{"name":"fun isInstalled(): Boolean","description":"it.uniud.newbestsub.utils.RandomBridge.isInstalled","location":"-new-best-sub/it.uniud.newbestsub.utils/-random-bridge/is-installed.html","searchKeys":["isInstalled","fun isInstalled(): Boolean","it.uniud.newbestsub.utils.RandomBridge.isInstalled"]},{"name":"fun isTopicInASolutionOfCardinality(topicLabel: String, cardinality: Double): Boolean","description":"it.uniud.newbestsub.dataset.DatasetModel.isTopicInASolutionOfCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/is-topic-in-a-solution-of-cardinality.html","searchKeys":["isTopicInASolutionOfCardinality","fun isTopicInASolutionOfCardinality(topicLabel: String, cardinality: Double): Boolean","it.uniud.newbestsub.dataset.DatasetModel.isTopicInASolutionOfCardinality"]},{"name":"fun kendallTauBPrimitive(x: DoubleArray, y: DoubleArray): Double","description":"it.uniud.newbestsub.math.Correlations.kendallTauBPrimitive","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/kendall-tau-b-primitive.html","searchKeys":["kendallTauBPrimitive","fun kendallTauBPrimitive(x: DoubleArray, y: DoubleArray): Double","it.uniud.newbestsub.math.Correlations.kendallTauBPrimitive"]},{"name":"fun load(datasetPath: String)","description":"it.uniud.newbestsub.dataset.DatasetController.load","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/load.html","searchKeys":["load","fun load(datasetPath: String)","it.uniud.newbestsub.dataset.DatasetController.load"]},{"name":"fun loadCommandLineOptions(): Options","description":"it.uniud.newbestsub.program.Program.loadCommandLineOptions","location":"-new-best-sub/it.uniud.newbestsub.program/-program/load-command-line-options.html","searchKeys":["loadCommandLineOptions","fun loadCommandLineOptions(): Options","it.uniud.newbestsub.program.Program.loadCommandLineOptions"]},{"name":"fun loadData(datasetPath: String)","description":"it.uniud.newbestsub.dataset.DatasetModel.loadData","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/load-data.html","searchKeys":["loadData","fun loadData(datasetPath: String)","it.uniud.newbestsub.dataset.DatasetModel.loadData"]},{"name":"fun main(arguments: Array<String>)","description":"it.uniud.newbestsub.program.Program.main","location":"-new-best-sub/it.uniud.newbestsub.program/-program/main.html","searchKeys":["main","fun main(arguments: Array<String>)","it.uniud.newbestsub.program.Program.main"]},{"name":"fun makeBoxedCorrelation(method: String): (DoubleArray, DoubleArray) -> Double","description":"it.uniud.newbestsub.math.Correlations.makeBoxedCorrelation","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/make-boxed-correlation.html","searchKeys":["makeBoxedCorrelation","fun makeBoxedCorrelation(method: String): (DoubleArray, DoubleArray) -> Double","it.uniud.newbestsub.math.Correlations.makeBoxedCorrelation"]},{"name":"fun makePrimitiveCorrelation(method: String): (DoubleArray, DoubleArray) -> Double","description":"it.uniud.newbestsub.math.Correlations.makePrimitiveCorrelation","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/make-primitive-correlation.html","searchKeys":["makePrimitiveCorrelation","fun makePrimitiveCorrelation(method: String): (DoubleArray, DoubleArray) -> Double","it.uniud.newbestsub.math.Correlations.makePrimitiveCorrelation"]},{"name":"fun maskB64Cached(): String","description":"it.uniud.newbestsub.problem.BestSubsetSolution.maskB64Cached","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/mask-b64-cached.html","searchKeys":["maskB64Cached","fun maskB64Cached(): String","it.uniud.newbestsub.problem.BestSubsetSolution.maskB64Cached"]},{"name":"fun merge(numberOfExecutions: Int)","description":"it.uniud.newbestsub.dataset.DatasetController.merge","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/merge.html","searchKeys":["merge","fun merge(numberOfExecutions: Int)","it.uniud.newbestsub.dataset.DatasetController.merge"]},{"name":"fun onAppendCardinality(model: DatasetModel, ev: CardinalityResult)","description":"it.uniud.newbestsub.dataset.view.CSVView.onAppendCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/on-append-cardinality.html","searchKeys":["onAppendCardinality","fun onAppendCardinality(model: DatasetModel, ev: CardinalityResult)","it.uniud.newbestsub.dataset.view.CSVView.onAppendCardinality"]},{"name":"fun onAppendCardinality(model: DatasetModel, ev: CardinalityResult)","description":"it.uniud.newbestsub.dataset.view.ParquetView.onAppendCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/on-append-cardinality.html","searchKeys":["onAppendCardinality","fun onAppendCardinality(model: DatasetModel, ev: CardinalityResult)","it.uniud.newbestsub.dataset.view.ParquetView.onAppendCardinality"]},{"name":"fun onReplaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","description":"it.uniud.newbestsub.dataset.view.CSVView.onReplaceTopBatch","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/on-replace-top-batch.html","searchKeys":["onReplaceTopBatch","fun onReplaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","it.uniud.newbestsub.dataset.view.CSVView.onReplaceTopBatch"]},{"name":"fun onReplaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","description":"it.uniud.newbestsub.dataset.view.ParquetView.onReplaceTopBatch","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/on-replace-top-batch.html","searchKeys":["onReplaceTopBatch","fun onReplaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","it.uniud.newbestsub.dataset.view.ParquetView.onReplaceTopBatch"]},{"name":"fun openStreams(model: DatasetModel): CSVView.StreamHandles","description":"it.uniud.newbestsub.dataset.view.CSVView.openStreams","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/open-streams.html","searchKeys":["openStreams","fun openStreams(model: DatasetModel): CSVView.StreamHandles","it.uniud.newbestsub.dataset.view.CSVView.openStreams"]},{"name":"fun parquetNameNoTs(baseParts: Array<String>, suffix: String): String","description":"it.uniud.newbestsub.dataset.view.ViewPaths.parquetNameNoTs","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/parquet-name-no-ts.html","searchKeys":["parquetNameNoTs","fun parquetNameNoTs(baseParts: Array<String>, suffix: String): String","it.uniud.newbestsub.dataset.view.ViewPaths.parquetNameNoTs"]},{"name":"fun print(runResult: Triple<List<BinarySolution>, List<BinarySolution>, Triple<String, String, Long>>, model: DatasetModel)","description":"it.uniud.newbestsub.dataset.DatasetView.print","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/print.html","searchKeys":["print","fun print(runResult: Triple<List<BinarySolution>, List<BinarySolution>, Triple<String, String, Long>>, model: DatasetModel)","it.uniud.newbestsub.dataset.DatasetView.print"]},{"name":"fun printSnapshot(model: DatasetModel, allSolutions: List<BinarySolution>, topSolutions: List<BinarySolution>, actualTarget: String)","description":"it.uniud.newbestsub.dataset.view.CSVView.printSnapshot","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/print-snapshot.html","searchKeys":["printSnapshot","fun printSnapshot(model: DatasetModel, allSolutions: List<BinarySolution>, topSolutions: List<BinarySolution>, actualTarget: String)","it.uniud.newbestsub.dataset.view.CSVView.printSnapshot"]},{"name":"fun printSnapshot(model: DatasetModel, allSolutions: List<BinarySolution>, topSolutions: List<BinarySolution>, actualTarget: String)","description":"it.uniud.newbestsub.dataset.view.ParquetView.printSnapshot","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/print-snapshot.html","searchKeys":["printSnapshot","fun printSnapshot(model: DatasetModel, allSolutions: List<BinarySolution>, topSolutions: List<BinarySolution>, actualTarget: String)","it.uniud.newbestsub.dataset.view.ParquetView.printSnapshot"]},{"name":"fun promoteBootstrapToParameterizedLog(paramsToken: String, desiredRootLevel: Level? = null)","description":"it.uniud.newbestsub.utils.LogManager.promoteBootstrapToParameterizedLog","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/promote-bootstrap-to-parameterized-log.html","searchKeys":["promoteBootstrapToParameterizedLog","fun promoteBootstrapToParameterizedLog(paramsToken: String, desiredRootLevel: Level? = null)","it.uniud.newbestsub.utils.LogManager.promoteBootstrapToParameterizedLog"]},{"name":"fun replaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","description":"it.uniud.newbestsub.dataset.DatasetView.replaceTopBatch","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/replace-top-batch.html","searchKeys":["replaceTopBatch","fun replaceTopBatch(model: DatasetModel, blocks: Map<Int, List<String>>)","it.uniud.newbestsub.dataset.DatasetView.replaceTopBatch"]},{"name":"fun resetIncrementalEvaluationState()","description":"it.uniud.newbestsub.problem.BestSubsetSolution.resetIncrementalEvaluationState","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/reset-incremental-evaluation-state.html","searchKeys":["resetIncrementalEvaluationState","fun resetIncrementalEvaluationState()","it.uniud.newbestsub.problem.BestSubsetSolution.resetIncrementalEvaluationState"]},{"name":"fun retrieveMaskB64ForCardinality(cardinality: Double): String","description":"it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskB64ForCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/retrieve-mask-b64-for-cardinality.html","searchKeys":["retrieveMaskB64ForCardinality","fun retrieveMaskB64ForCardinality(cardinality: Double): String","it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskB64ForCardinality"]},{"name":"fun retrieveMaskForCardinality(cardinality: Double): BooleanArray?","description":"it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskForCardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/retrieve-mask-for-cardinality.html","searchKeys":["retrieveMaskForCardinality","fun retrieveMaskForCardinality(cardinality: Double): BooleanArray?","it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskForCardinality"]},{"name":"fun retrieveMaskForCardinalitySized(cardinality: Double, expectedSize: Int): BooleanArray","description":"it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskForCardinalitySized","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/retrieve-mask-for-cardinality-sized.html","searchKeys":["retrieveMaskForCardinalitySized","fun retrieveMaskForCardinalitySized(cardinality: Double, expectedSize: Int): BooleanArray","it.uniud.newbestsub.dataset.DatasetModel.retrieveMaskForCardinalitySized"]},{"name":"fun retrieveTopicStatus(): BooleanArray","description":"it.uniud.newbestsub.problem.BestSubsetSolution.retrieveTopicStatus","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/retrieve-topic-status.html","searchKeys":["retrieveTopicStatus","fun retrieveTopicStatus(): BooleanArray","it.uniud.newbestsub.problem.BestSubsetSolution.retrieveTopicStatus"]},{"name":"fun sanitizeForFile(part: String): String","description":"it.uniud.newbestsub.utils.Tools.sanitizeForFile","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/sanitize-for-file.html","searchKeys":["sanitizeForFile","fun sanitizeForFile(part: String): String","it.uniud.newbestsub.utils.Tools.sanitizeForFile"]},{"name":"fun sealData()","description":"it.uniud.newbestsub.dataset.DatasetModel.sealData","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/seal-data.html","searchKeys":["sealData","fun sealData()","it.uniud.newbestsub.dataset.DatasetModel.sealData"]},{"name":"fun setBitValue(bitIndex: Int, value: Boolean)","description":"it.uniud.newbestsub.problem.BestSubsetSolution.setBitValue","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/set-bit-value.html","searchKeys":["setBitValue","fun setBitValue(bitIndex: Int, value: Boolean)","it.uniud.newbestsub.problem.BestSubsetSolution.setBitValue"]},{"name":"fun solve(parameters: Parameters)","description":"it.uniud.newbestsub.dataset.DatasetController.solve","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/solve.html","searchKeys":["solve","fun solve(parameters: Parameters)","it.uniud.newbestsub.dataset.DatasetController.solve"]},{"name":"fun solve(parameters: Parameters, out: SendChannel<ProgressEvent>? = null): Triple<List<BinarySolution>, List<BinarySolution>, Triple<String, String, Long>>","description":"it.uniud.newbestsub.dataset.DatasetModel.solve","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/solve.html","searchKeys":["solve","fun solve(parameters: Parameters, out: SendChannel<ProgressEvent>? = null): Triple<List<BinarySolution>, List<BinarySolution>, Triple<String, String, Long>>","it.uniud.newbestsub.dataset.DatasetModel.solve"]},{"name":"fun stableSeedFrom(p: Parameters): Long","description":"it.uniud.newbestsub.utils.Tools.stableSeedFrom","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/stable-seed-from.html","searchKeys":["stableSeedFrom","fun stableSeedFrom(p: Parameters): Long","it.uniud.newbestsub.utils.Tools.stableSeedFrom"]},{"name":"fun switchActiveLogFile(newAbsoluteBasePath: String)","description":"it.uniud.newbestsub.utils.LogManager.switchActiveLogFile","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/switch-active-log-file.html","searchKeys":["switchActiveLogFile","fun switchActiveLogFile(newAbsoluteBasePath: String)","it.uniud.newbestsub.utils.LogManager.switchActiveLogFile"]},{"name":"fun toPrimitiveAPRows(legacy: Map<String, DoubleArray>): Map<String, DoubleArray>","description":"it.uniud.newbestsub.dataset.model.toPrimitiveAPRows","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/to-primitive-a-p-rows.html","searchKeys":["toPrimitiveAPRows","fun toPrimitiveAPRows(legacy: Map<String, DoubleArray>): Map<String, DoubleArray>","it.uniud.newbestsub.dataset.model.toPrimitiveAPRows"]},{"name":"fun updateRootLoggerLevel(level: Level): Logger","description":"it.uniud.newbestsub.utils.LogManager.updateRootLoggerLevel","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/update-root-logger-level.html","searchKeys":["updateRootLoggerLevel","fun updateRootLoggerLevel(level: Level): Logger","it.uniud.newbestsub.utils.LogManager.updateRootLoggerLevel"]},{"name":"fun writeCsv(csvRows: List<Array<String>>, resultCsvPath: String)","description":"it.uniud.newbestsub.dataset.DatasetView.writeCsv","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/write-csv.html","searchKeys":["writeCsv","fun writeCsv(csvRows: List<Array<String>>, resultCsvPath: String)","it.uniud.newbestsub.dataset.DatasetView.writeCsv"]},{"name":"fun writeCsv(data: List<Array<String>>, resultPath: String)","description":"it.uniud.newbestsub.dataset.view.CSVView.writeCsv","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/write-csv.html","searchKeys":["writeCsv","fun writeCsv(data: List<Array<String>>, resultPath: String)","it.uniud.newbestsub.dataset.view.CSVView.writeCsv"]},{"name":"fun writeParquet(rows: List<Array<String>>, resultParquetPath: String)","description":"it.uniud.newbestsub.dataset.DatasetView.writeParquet","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-view/write-parquet.html","searchKeys":["writeParquet","fun writeParquet(rows: List<Array<String>>, resultParquetPath: String)","it.uniud.newbestsub.dataset.DatasetView.writeParquet"]},{"name":"fun writeTable(rows: List<Array<String>>, outPath: String)","description":"it.uniud.newbestsub.dataset.view.ParquetView.writeTable","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-parquet-view/write-table.html","searchKeys":["writeTable","fun writeTable(rows: List<Array<String>>, outPath: String)","it.uniud.newbestsub.dataset.view.ParquetView.writeTable"]},{"name":"object Constants","description":"it.uniud.newbestsub.utils.Constants","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/index.html","searchKeys":["Constants","object Constants","it.uniud.newbestsub.utils.Constants"]},{"name":"object Correlations","description":"it.uniud.newbestsub.math.Correlations","location":"-new-best-sub/it.uniud.newbestsub.math/-correlations/index.html","searchKeys":["Correlations","object Correlations","it.uniud.newbestsub.math.Correlations"]},{"name":"object LogManager","description":"it.uniud.newbestsub.utils.LogManager","location":"-new-best-sub/it.uniud.newbestsub.utils/-log-manager/index.html","searchKeys":["LogManager","object LogManager","it.uniud.newbestsub.utils.LogManager"]},{"name":"object Program","description":"it.uniud.newbestsub.program.Program","location":"-new-best-sub/it.uniud.newbestsub.program/-program/index.html","searchKeys":["Program","object Program","it.uniud.newbestsub.program.Program"]},{"name":"object RandomBridge","description":"it.uniud.newbestsub.utils.RandomBridge","location":"-new-best-sub/it.uniud.newbestsub.utils/-random-bridge/index.html","searchKeys":["RandomBridge","object RandomBridge","it.uniud.newbestsub.utils.RandomBridge"]},{"name":"object Statistics","description":"it.uniud.newbestsub.math.Statistics","location":"-new-best-sub/it.uniud.newbestsub.math/-statistics/index.html","searchKeys":["Statistics","object Statistics","it.uniud.newbestsub.math.Statistics"]},{"name":"object Tools","description":"it.uniud.newbestsub.utils.Tools","location":"-new-best-sub/it.uniud.newbestsub.utils/-tools/index.html","searchKeys":["Tools","object Tools","it.uniud.newbestsub.utils.Tools"]},{"name":"object ViewPaths","description":"it.uniud.newbestsub.dataset.view.ViewPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-view-paths/index.html","searchKeys":["ViewPaths","object ViewPaths","it.uniud.newbestsub.dataset.view.ViewPaths"]},{"name":"open override fun copy(): BestSubsetSolution","description":"it.uniud.newbestsub.problem.BestSubsetSolution.copy","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/copy.html","searchKeys":["copy","open override fun copy(): BestSubsetSolution","it.uniud.newbestsub.problem.BestSubsetSolution.copy"]},{"name":"open override fun createSolution(): BinarySolution","description":"it.uniud.newbestsub.problem.BestSubsetProblem.createSolution","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/create-solution.html","searchKeys":["createSolution","open override fun createSolution(): BinarySolution","it.uniud.newbestsub.problem.BestSubsetProblem.createSolution"]},{"name":"open override fun crossoverProbability(): Double","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.crossoverProbability","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/crossover-probability.html","searchKeys":["crossoverProbability","open override fun crossoverProbability(): Double","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.crossoverProbability"]},{"name":"open override fun evaluate(solution: BinarySolution): BinarySolution","description":"it.uniud.newbestsub.problem.BestSubsetProblem.evaluate","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/evaluate.html","searchKeys":["evaluate","open override fun evaluate(solution: BinarySolution): BinarySolution","it.uniud.newbestsub.problem.BestSubsetProblem.evaluate"]},{"name":"open override fun execute(candidate: BinarySolution): BinarySolution","description":"it.uniud.newbestsub.problem.operators.BitFlipMutation.execute","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-bit-flip-mutation/execute.html","searchKeys":["execute","open override fun execute(candidate: BinarySolution): BinarySolution","it.uniud.newbestsub.problem.operators.BitFlipMutation.execute"]},{"name":"open override fun execute(candidate: BinarySolution): BinarySolution","description":"it.uniud.newbestsub.problem.operators.FixedKSwapMutation.execute","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-fixed-k-swap-mutation/execute.html","searchKeys":["execute","open override fun execute(candidate: BinarySolution): BinarySolution","it.uniud.newbestsub.problem.operators.FixedKSwapMutation.execute"]},{"name":"open override fun execute(parents: MutableList<BinarySolution>): MutableList<BinarySolution>","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.execute","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/execute.html","searchKeys":["execute","open override fun execute(parents: MutableList<BinarySolution>): MutableList<BinarySolution>","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.execute"]},{"name":"open override fun mutationProbability(): Double","description":"it.uniud.newbestsub.problem.operators.BitFlipMutation.mutationProbability","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-bit-flip-mutation/mutation-probability.html","searchKeys":["mutationProbability","open override fun mutationProbability(): Double","it.uniud.newbestsub.problem.operators.BitFlipMutation.mutationProbability"]},{"name":"open override fun mutationProbability(): Double","description":"it.uniud.newbestsub.problem.operators.FixedKSwapMutation.mutationProbability","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-fixed-k-swap-mutation/mutation-probability.html","searchKeys":["mutationProbability","open override fun mutationProbability(): Double","it.uniud.newbestsub.problem.operators.FixedKSwapMutation.mutationProbability"]},{"name":"open override fun name(): String","description":"it.uniud.newbestsub.problem.BestSubsetProblem.name","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/name.html","searchKeys":["name","open override fun name(): String","it.uniud.newbestsub.problem.BestSubsetProblem.name"]},{"name":"open override fun numberOfBitsPerVariable(): List<Int>","description":"it.uniud.newbestsub.problem.BestSubsetProblem.numberOfBitsPerVariable","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/number-of-bits-per-variable.html","searchKeys":["numberOfBitsPerVariable","open override fun numberOfBitsPerVariable(): List<Int>","it.uniud.newbestsub.problem.BestSubsetProblem.numberOfBitsPerVariable"]},{"name":"open override fun numberOfConstraints(): Int","description":"it.uniud.newbestsub.problem.BestSubsetProblem.numberOfConstraints","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/number-of-constraints.html","searchKeys":["numberOfConstraints","open override fun numberOfConstraints(): Int","it.uniud.newbestsub.problem.BestSubsetProblem.numberOfConstraints"]},{"name":"open override fun numberOfGeneratedChildren(): Int","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.numberOfGeneratedChildren","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/number-of-generated-children.html","searchKeys":["numberOfGeneratedChildren","open override fun numberOfGeneratedChildren(): Int","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.numberOfGeneratedChildren"]},{"name":"open override fun numberOfObjectives(): Int","description":"it.uniud.newbestsub.problem.BestSubsetProblem.numberOfObjectives","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/number-of-objectives.html","searchKeys":["numberOfObjectives","open override fun numberOfObjectives(): Int","it.uniud.newbestsub.problem.BestSubsetProblem.numberOfObjectives"]},{"name":"open override fun numberOfRequiredParents(): Int","description":"it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.numberOfRequiredParents","location":"-new-best-sub/it.uniud.newbestsub.problem.operators/-binary-pruning-crossover/number-of-required-parents.html","searchKeys":["numberOfRequiredParents","open override fun numberOfRequiredParents(): Int","it.uniud.newbestsub.problem.operators.BinaryPruningCrossover.numberOfRequiredParents"]},{"name":"open override fun numberOfVariables(): Int","description":"it.uniud.newbestsub.problem.BestSubsetProblem.numberOfVariables","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/number-of-variables.html","searchKeys":["numberOfVariables","open override fun numberOfVariables(): Int","it.uniud.newbestsub.problem.BestSubsetProblem.numberOfVariables"]},{"name":"open override fun totalNumberOfBits(): Int","description":"it.uniud.newbestsub.problem.BestSubsetProblem.totalNumberOfBits","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/total-number-of-bits.html","searchKeys":["totalNumberOfBits","open override fun totalNumberOfBits(): Int","it.uniud.newbestsub.problem.BestSubsetProblem.totalNumberOfBits"]},{"name":"open override val target: String","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.target","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/target.html","searchKeys":["target","open override val target: String","it.uniud.newbestsub.dataset.model.CardinalityResult.target"]},{"name":"open override val target: String","description":"it.uniud.newbestsub.dataset.model.RunCompleted.target","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-run-completed/target.html","searchKeys":["target","open override val target: String","it.uniud.newbestsub.dataset.model.RunCompleted.target"]},{"name":"open override val target: String","description":"it.uniud.newbestsub.dataset.model.TopKReplaceBatch.target","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-top-k-replace-batch/target.html","searchKeys":["target","open override val target: String","it.uniud.newbestsub.dataset.model.TopKReplaceBatch.target"]},{"name":"open override val threadName: String","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.threadName","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/thread-name.html","searchKeys":["threadName","open override val threadName: String","it.uniud.newbestsub.dataset.model.CardinalityResult.threadName"]},{"name":"open override val threadName: String","description":"it.uniud.newbestsub.dataset.model.RunCompleted.threadName","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-run-completed/thread-name.html","searchKeys":["threadName","open override val threadName: String","it.uniud.newbestsub.dataset.model.RunCompleted.threadName"]},{"name":"open override val threadName: String","description":"it.uniud.newbestsub.dataset.model.TopKReplaceBatch.threadName","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-top-k-replace-batch/thread-name.html","searchKeys":["threadName","open override val threadName: String","it.uniud.newbestsub.dataset.model.TopKReplaceBatch.threadName"]},{"name":"sealed interface ProgressEvent","description":"it.uniud.newbestsub.dataset.model.ProgressEvent","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-progress-event/index.html","searchKeys":["ProgressEvent","sealed interface ProgressEvent","it.uniud.newbestsub.dataset.model.ProgressEvent"]},{"name":"val BASE_PATH: String","description":"it.uniud.newbestsub.utils.Constants.BASE_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-b-a-s-e_-p-a-t-h.html","searchKeys":["BASE_PATH","val BASE_PATH: String","it.uniud.newbestsub.utils.Constants.BASE_PATH"]},{"name":"val NEWBESTSUB_EXPERIMENTS_INPUT_PATH: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_INPUT_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-e-x-p-e-r-i-m-e-n-t-s_-i-n-p-u-t_-p-a-t-h.html","searchKeys":["NEWBESTSUB_EXPERIMENTS_INPUT_PATH","val NEWBESTSUB_EXPERIMENTS_INPUT_PATH: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_INPUT_PATH"]},{"name":"val NEWBESTSUB_EXPERIMENTS_PATH: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-e-x-p-e-r-i-m-e-n-t-s_-p-a-t-h.html","searchKeys":["NEWBESTSUB_EXPERIMENTS_PATH","val NEWBESTSUB_EXPERIMENTS_PATH: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_EXPERIMENTS_PATH"]},{"name":"val NEWBESTSUB_INPUT_PATH: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_INPUT_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-i-n-p-u-t_-p-a-t-h.html","searchKeys":["NEWBESTSUB_INPUT_PATH","val NEWBESTSUB_INPUT_PATH: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_INPUT_PATH"]},{"name":"val NEWBESTSUB_OUTPUT_PATH: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_OUTPUT_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-o-u-t-p-u-t_-p-a-t-h.html","searchKeys":["NEWBESTSUB_OUTPUT_PATH","val NEWBESTSUB_OUTPUT_PATH: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_OUTPUT_PATH"]},{"name":"val NEWBESTSUB_PATH: String","description":"it.uniud.newbestsub.utils.Constants.NEWBESTSUB_PATH","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-n-e-w-b-e-s-t-s-u-b_-p-a-t-h.html","searchKeys":["NEWBESTSUB_PATH","val NEWBESTSUB_PATH: String","it.uniud.newbestsub.utils.Constants.NEWBESTSUB_PATH"]},{"name":"val PATH_SEPARATOR: String","description":"it.uniud.newbestsub.utils.Constants.PATH_SEPARATOR","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-p-a-t-h_-s-e-p-a-r-a-t-o-r.html","searchKeys":["PATH_SEPARATOR","val PATH_SEPARATOR: String","it.uniud.newbestsub.utils.Constants.PATH_SEPARATOR"]},{"name":"val RUN_TIMESTAMP: String","description":"it.uniud.newbestsub.utils.Constants.RUN_TIMESTAMP","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-r-u-n_-t-i-m-e-s-t-a-m-p.html","searchKeys":["RUN_TIMESTAMP","val RUN_TIMESTAMP: String","it.uniud.newbestsub.utils.Constants.RUN_TIMESTAMP"]},{"name":"val TOP_SOLUTIONS_FILE_SUFFIX: String","description":"it.uniud.newbestsub.utils.Constants.TOP_SOLUTIONS_FILE_SUFFIX","location":"-new-best-sub/it.uniud.newbestsub.utils/-constants/-t-o-p_-s-o-l-u-t-i-o-n-s_-f-i-l-e_-s-u-f-f-i-x.html","searchKeys":["TOP_SOLUTIONS_FILE_SUFFIX","val TOP_SOLUTIONS_FILE_SUFFIX: String","it.uniud.newbestsub.utils.Constants.TOP_SOLUTIONS_FILE_SUFFIX"]},{"name":"val averagePrecisionBySystem: Array<DoubleArray>","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.averagePrecisionBySystem","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/average-precision-by-system.html","searchKeys":["averagePrecisionBySystem","val averagePrecisionBySystem: Array<DoubleArray>","it.uniud.newbestsub.dataset.model.PrecomputedData.averagePrecisionBySystem"]},{"name":"val blocks: Map<Int, List<String>>","description":"it.uniud.newbestsub.dataset.model.TopKReplaceBatch.blocks","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-top-k-replace-batch/blocks.html","searchKeys":["blocks","val blocks: Map<Int, List<String>>","it.uniud.newbestsub.dataset.model.TopKReplaceBatch.blocks"]},{"name":"val cardinality: Int","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.cardinality","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/cardinality.html","searchKeys":["cardinality","val cardinality: Int","it.uniud.newbestsub.dataset.model.CardinalityResult.cardinality"]},{"name":"val computingTime: Long","description":"it.uniud.newbestsub.dataset.model.RunCompleted.computingTime","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-run-completed/computing-time.html","searchKeys":["computingTime","val computingTime: Long","it.uniud.newbestsub.dataset.model.RunCompleted.computingTime"]},{"name":"val correlation: Double","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.correlation","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/correlation.html","searchKeys":["correlation","val correlation: Double","it.uniud.newbestsub.dataset.model.CardinalityResult.correlation"]},{"name":"val correlationMethod: String","description":"it.uniud.newbestsub.dataset.Parameters.correlationMethod","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/correlation-method.html","searchKeys":["correlationMethod","val correlationMethod: String","it.uniud.newbestsub.dataset.Parameters.correlationMethod"]},{"name":"val currentExecution: Int","description":"it.uniud.newbestsub.dataset.Parameters.currentExecution","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/current-execution.html","searchKeys":["currentExecution","val currentExecution: Int","it.uniud.newbestsub.dataset.Parameters.currentExecution"]},{"name":"val datasetName: String","description":"it.uniud.newbestsub.dataset.Parameters.datasetName","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/dataset-name.html","searchKeys":["datasetName","val datasetName: String","it.uniud.newbestsub.dataset.Parameters.datasetName"]},{"name":"val deterministic: Boolean = false","description":"it.uniud.newbestsub.dataset.Parameters.deterministic","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/deterministic.html","searchKeys":["deterministic","val deterministic: Boolean = false","it.uniud.newbestsub.dataset.Parameters.deterministic"]},{"name":"val dominatedSolutions: LinkedHashMap<Int, BinarySolution>","description":"it.uniud.newbestsub.problem.BestSubsetProblem.dominatedSolutions","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/dominated-solutions.html","searchKeys":["dominatedSolutions","val dominatedSolutions: LinkedHashMap<Int, BinarySolution>","it.uniud.newbestsub.problem.BestSubsetProblem.dominatedSolutions"]},{"name":"val fullSetMeanAPBySystem: DoubleArray","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.fullSetMeanAPBySystem","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/full-set-mean-a-p-by-system.html","searchKeys":["fullSetMeanAPBySystem","val fullSetMeanAPBySystem: DoubleArray","it.uniud.newbestsub.dataset.model.PrecomputedData.fullSetMeanAPBySystem"]},{"name":"val funWriter: BufferedWriter","description":"it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.funWriter","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/-stream-handles/fun-writer.html","searchKeys":["funWriter","val funWriter: BufferedWriter","it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.funWriter"]},{"name":"val functionValuesCsvLine: String","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.functionValuesCsvLine","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/function-values-csv-line.html","searchKeys":["functionValuesCsvLine","val functionValuesCsvLine: String","it.uniud.newbestsub.dataset.model.CardinalityResult.functionValuesCsvLine"]},{"name":"val numberOfIterations: Int","description":"it.uniud.newbestsub.dataset.Parameters.numberOfIterations","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/number-of-iterations.html","searchKeys":["numberOfIterations","val numberOfIterations: Int","it.uniud.newbestsub.dataset.Parameters.numberOfIterations"]},{"name":"val numberOfRepetitions: Int","description":"it.uniud.newbestsub.dataset.Parameters.numberOfRepetitions","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/number-of-repetitions.html","searchKeys":["numberOfRepetitions","val numberOfRepetitions: Int","it.uniud.newbestsub.dataset.Parameters.numberOfRepetitions"]},{"name":"val numberOfSelectedTopics: Int","description":"it.uniud.newbestsub.problem.BestSubsetSolution.numberOfSelectedTopics","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/number-of-selected-topics.html","searchKeys":["numberOfSelectedTopics","val numberOfSelectedTopics: Int","it.uniud.newbestsub.problem.BestSubsetSolution.numberOfSelectedTopics"]},{"name":"val numberOfSystems: Int","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.numberOfSystems","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/number-of-systems.html","searchKeys":["numberOfSystems","val numberOfSystems: Int","it.uniud.newbestsub.dataset.model.PrecomputedData.numberOfSystems"]},{"name":"val numberOfTopics: Int","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.numberOfTopics","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/number-of-topics.html","searchKeys":["numberOfTopics","val numberOfTopics: Int","it.uniud.newbestsub.dataset.model.PrecomputedData.numberOfTopics"]},{"name":"val percentiles: List<Int>","description":"it.uniud.newbestsub.dataset.Parameters.percentiles","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/percentiles.html","searchKeys":["percentiles","val percentiles: List<Int>","it.uniud.newbestsub.dataset.Parameters.percentiles"]},{"name":"val populationSize: Int","description":"it.uniud.newbestsub.dataset.Parameters.populationSize","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/population-size.html","searchKeys":["populationSize","val populationSize: Int","it.uniud.newbestsub.dataset.Parameters.populationSize"]},{"name":"val seed: Long? = null","description":"it.uniud.newbestsub.dataset.Parameters.seed","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/seed.html","searchKeys":["seed","val seed: Long? = null","it.uniud.newbestsub.dataset.Parameters.seed"]},{"name":"val systemIdsInOrder: List<String>","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.systemIdsInOrder","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/system-ids-in-order.html","searchKeys":["systemIdsInOrder","val systemIdsInOrder: List<String>","it.uniud.newbestsub.dataset.model.PrecomputedData.systemIdsInOrder"]},{"name":"val systemIndexById: Map<String, Int>","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.systemIndexById","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/system-index-by-id.html","searchKeys":["systemIndexById","val systemIndexById: Map<String, Int>","it.uniud.newbestsub.dataset.model.PrecomputedData.systemIndexById"]},{"name":"val targetToAchieve: String","description":"it.uniud.newbestsub.dataset.Parameters.targetToAchieve","location":"-new-best-sub/it.uniud.newbestsub.dataset/-parameters/target-to-achieve.html","searchKeys":["targetToAchieve","val targetToAchieve: String","it.uniud.newbestsub.dataset.Parameters.targetToAchieve"]},{"name":"val topSolutions: LinkedHashMap<Int, MutableList<BinarySolution>>","description":"it.uniud.newbestsub.problem.BestSubsetProblem.topSolutions","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/top-solutions.html","searchKeys":["topSolutions","val topSolutions: LinkedHashMap<Int, MutableList<BinarySolution>>","it.uniud.newbestsub.problem.BestSubsetProblem.topSolutions"]},{"name":"val topicColumnViewByTopic: Array<DoubleArray>","description":"it.uniud.newbestsub.dataset.model.PrecomputedData.topicColumnViewByTopic","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-precomputed-data/topic-column-view-by-topic.html","searchKeys":["topicColumnViewByTopic","val topicColumnViewByTopic: Array<DoubleArray>","it.uniud.newbestsub.dataset.model.PrecomputedData.topicColumnViewByTopic"]},{"name":"val topicLabels: Array<String>","description":"it.uniud.newbestsub.problem.BestSubsetProblem.topicLabels","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-problem/topic-labels.html","searchKeys":["topicLabels","val topicLabels: Array<String>","it.uniud.newbestsub.problem.BestSubsetProblem.topicLabels"]},{"name":"val varWriter: BufferedWriter","description":"it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.varWriter","location":"-new-best-sub/it.uniud.newbestsub.dataset.view/-c-s-v-view/-stream-handles/var-writer.html","searchKeys":["varWriter","val varWriter: BufferedWriter","it.uniud.newbestsub.dataset.view.CSVView.StreamHandles.varWriter"]},{"name":"val variableValuesCsvLine: String","description":"it.uniud.newbestsub.dataset.model.CardinalityResult.variableValuesCsvLine","location":"-new-best-sub/it.uniud.newbestsub.dataset.model/-cardinality-result/variable-values-csv-line.html","searchKeys":["variableValuesCsvLine","val variableValuesCsvLine: String","it.uniud.newbestsub.dataset.model.CardinalityResult.variableValuesCsvLine"]},{"name":"var aggregatedDataResultPaths: MutableList<String>","description":"it.uniud.newbestsub.dataset.DatasetController.aggregatedDataResultPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/aggregated-data-result-paths.html","searchKeys":["aggregatedDataResultPaths","var aggregatedDataResultPaths: MutableList<String>","it.uniud.newbestsub.dataset.DatasetController.aggregatedDataResultPaths"]},{"name":"var averagePrecisions: LinkedHashMap<String, DoubleArray>","description":"it.uniud.newbestsub.dataset.DatasetModel.averagePrecisions","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/average-precisions.html","searchKeys":["averagePrecisions","var averagePrecisions: LinkedHashMap<String, DoubleArray>","it.uniud.newbestsub.dataset.DatasetModel.averagePrecisions"]},{"name":"var cachedSumsBySystem: DoubleArray?","description":"it.uniud.newbestsub.problem.BestSubsetSolution.cachedSumsBySystem","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/cached-sums-by-system.html","searchKeys":["cachedSumsBySystem","var cachedSumsBySystem: DoubleArray?","it.uniud.newbestsub.problem.BestSubsetSolution.cachedSumsBySystem"]},{"name":"var computingTime: Long","description":"it.uniud.newbestsub.dataset.DatasetModel.computingTime","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/computing-time.html","searchKeys":["computingTime","var computingTime: Long","it.uniud.newbestsub.dataset.DatasetModel.computingTime"]},{"name":"var correlationMethod: String","description":"it.uniud.newbestsub.dataset.DatasetModel.correlationMethod","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/correlation-method.html","searchKeys":["correlationMethod","var correlationMethod: String","it.uniud.newbestsub.dataset.DatasetModel.correlationMethod"]},{"name":"var currentExecution: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.currentExecution","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/current-execution.html","searchKeys":["currentExecution","var currentExecution: Int","it.uniud.newbestsub.dataset.DatasetModel.currentExecution"]},{"name":"var datasetName: String","description":"it.uniud.newbestsub.dataset.DatasetModel.datasetName","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/dataset-name.html","searchKeys":["datasetName","var datasetName: String","it.uniud.newbestsub.dataset.DatasetModel.datasetName"]},{"name":"var expansionCoefficient: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.expansionCoefficient","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/expansion-coefficient.html","searchKeys":["expansionCoefficient","var expansionCoefficient: Int","it.uniud.newbestsub.dataset.DatasetModel.expansionCoefficient"]},{"name":"var functionValuesResultPaths: MutableList<String>","description":"it.uniud.newbestsub.dataset.DatasetController.functionValuesResultPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/function-values-result-paths.html","searchKeys":["functionValuesResultPaths","var functionValuesResultPaths: MutableList<String>","it.uniud.newbestsub.dataset.DatasetController.functionValuesResultPaths"]},{"name":"var infoResultPaths: MutableList<String>","description":"it.uniud.newbestsub.dataset.DatasetController.infoResultPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/info-result-paths.html","searchKeys":["infoResultPaths","var infoResultPaths: MutableList<String>","it.uniud.newbestsub.dataset.DatasetController.infoResultPaths"]},{"name":"var lastEvaluatedMask: BooleanArray?","description":"it.uniud.newbestsub.problem.BestSubsetSolution.lastEvaluatedMask","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/last-evaluated-mask.html","searchKeys":["lastEvaluatedMask","var lastEvaluatedMask: BooleanArray?","it.uniud.newbestsub.problem.BestSubsetSolution.lastEvaluatedMask"]},{"name":"var lastMutationWasFixedKSwap: Boolean","description":"it.uniud.newbestsub.problem.BestSubsetSolution.lastMutationWasFixedKSwap","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/last-mutation-was-fixed-k-swap.html","searchKeys":["lastMutationWasFixedKSwap","var lastMutationWasFixedKSwap: Boolean","it.uniud.newbestsub.problem.BestSubsetSolution.lastMutationWasFixedKSwap"]},{"name":"var lastSwapInIndex: Int?","description":"it.uniud.newbestsub.problem.BestSubsetSolution.lastSwapInIndex","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/last-swap-in-index.html","searchKeys":["lastSwapInIndex","var lastSwapInIndex: Int?","it.uniud.newbestsub.problem.BestSubsetSolution.lastSwapInIndex"]},{"name":"var lastSwapOutIndex: Int?","description":"it.uniud.newbestsub.problem.BestSubsetSolution.lastSwapOutIndex","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/last-swap-out-index.html","searchKeys":["lastSwapOutIndex","var lastSwapOutIndex: Int?","it.uniud.newbestsub.problem.BestSubsetSolution.lastSwapOutIndex"]},{"name":"var meanAveragePrecisions: DoubleArray","description":"it.uniud.newbestsub.dataset.DatasetModel.meanAveragePrecisions","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/mean-average-precisions.html","searchKeys":["meanAveragePrecisions","var meanAveragePrecisions: DoubleArray","it.uniud.newbestsub.dataset.DatasetModel.meanAveragePrecisions"]},{"name":"var models: MutableList<DatasetModel>","description":"it.uniud.newbestsub.dataset.DatasetController.models","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/models.html","searchKeys":["models","var models: MutableList<DatasetModel>","it.uniud.newbestsub.dataset.DatasetController.models"]},{"name":"var numberOfIterations: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.numberOfIterations","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/number-of-iterations.html","searchKeys":["numberOfIterations","var numberOfIterations: Int","it.uniud.newbestsub.dataset.DatasetModel.numberOfIterations"]},{"name":"var numberOfRepetitions: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.numberOfRepetitions","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/number-of-repetitions.html","searchKeys":["numberOfRepetitions","var numberOfRepetitions: Int","it.uniud.newbestsub.dataset.DatasetModel.numberOfRepetitions"]},{"name":"var numberOfSystems: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.numberOfSystems","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/number-of-systems.html","searchKeys":["numberOfSystems","var numberOfSystems: Int","it.uniud.newbestsub.dataset.DatasetModel.numberOfSystems"]},{"name":"var numberOfTopics: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.numberOfTopics","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/number-of-topics.html","searchKeys":["numberOfTopics","var numberOfTopics: Int","it.uniud.newbestsub.dataset.DatasetModel.numberOfTopics"]},{"name":"var percentiles: LinkedHashMap<Int, List<Double>>","description":"it.uniud.newbestsub.dataset.DatasetModel.percentiles","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/percentiles.html","searchKeys":["percentiles","var percentiles: LinkedHashMap<Int, List<Double>>","it.uniud.newbestsub.dataset.DatasetModel.percentiles"]},{"name":"var populationSize: Int","description":"it.uniud.newbestsub.dataset.DatasetModel.populationSize","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/population-size.html","searchKeys":["populationSize","var populationSize: Int","it.uniud.newbestsub.dataset.DatasetModel.populationSize"]},{"name":"var systemLabels: Array<String>","description":"it.uniud.newbestsub.dataset.DatasetModel.systemLabels","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/system-labels.html","searchKeys":["systemLabels","var systemLabels: Array<String>","it.uniud.newbestsub.dataset.DatasetModel.systemLabels"]},{"name":"var targetToAchieve: String","description":"it.uniud.newbestsub.dataset.DatasetModel.targetToAchieve","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/target-to-achieve.html","searchKeys":["targetToAchieve","var targetToAchieve: String","it.uniud.newbestsub.dataset.DatasetModel.targetToAchieve"]},{"name":"var topSolutionsResultPaths: MutableList<String>","description":"it.uniud.newbestsub.dataset.DatasetController.topSolutionsResultPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/top-solutions-result-paths.html","searchKeys":["topSolutionsResultPaths","var topSolutionsResultPaths: MutableList<String>","it.uniud.newbestsub.dataset.DatasetController.topSolutionsResultPaths"]},{"name":"var topicDistribution: LinkedHashMap<String, MutableMap<Double, Boolean>>","description":"it.uniud.newbestsub.dataset.DatasetModel.topicDistribution","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/topic-distribution.html","searchKeys":["topicDistribution","var topicDistribution: LinkedHashMap<String, MutableMap<Double, Boolean>>","it.uniud.newbestsub.dataset.DatasetModel.topicDistribution"]},{"name":"var topicLabels: Array<String>","description":"it.uniud.newbestsub.dataset.DatasetModel.topicLabels","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-model/topic-labels.html","searchKeys":["topicLabels","var topicLabels: Array<String>","it.uniud.newbestsub.dataset.DatasetModel.topicLabels"]},{"name":"var topicStatus: BooleanArray","description":"it.uniud.newbestsub.problem.BestSubsetSolution.topicStatus","location":"-new-best-sub/it.uniud.newbestsub.problem/-best-subset-solution/topic-status.html","searchKeys":["topicStatus","var topicStatus: BooleanArray","it.uniud.newbestsub.problem.BestSubsetSolution.topicStatus"]},{"name":"var variableValuesResultPaths: MutableList<String>","description":"it.uniud.newbestsub.dataset.DatasetController.variableValuesResultPaths","location":"-new-best-sub/it.uniud.newbestsub.dataset/-dataset-controller/variable-values-result-paths.html","searchKeys":["variableValuesResultPaths","var variableValuesResultPaths: MutableList<String>","it.uniud.newbestsub.dataset.DatasetController.variableValuesResultPaths"]}]